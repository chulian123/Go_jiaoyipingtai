// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: market.proto

package market

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MarketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip     string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *MarketReq) Reset() {
	*x = MarketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketReq) ProtoMessage() {}

func (x *MarketReq) ProtoReflect() protoreflect.Message {
	mi := &file_market_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketReq.ProtoReflect.Descriptor instead.
func (*MarketReq) Descriptor() ([]byte, []int) {
	return file_market_proto_rawDescGZIP(), []int{0}
}

func (x *MarketReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *MarketReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type SymbolThumbRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CoinThumb `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SymbolThumbRes) Reset() {
	*x = SymbolThumbRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolThumbRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolThumbRes) ProtoMessage() {}

func (x *SymbolThumbRes) ProtoReflect() protoreflect.Message {
	mi := &file_market_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolThumbRes.ProtoReflect.Descriptor instead.
func (*SymbolThumbRes) Descriptor() ([]byte, []int) {
	return file_market_proto_rawDescGZIP(), []int{1}
}

func (x *SymbolThumbRes) GetList() []*CoinThumb {
	if x != nil {
		return x.List
	}
	return nil
}

type CoinThumb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol       string    `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Open         float64   `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	High         float64   `protobuf:"fixed64,3,opt,name=high,proto3" json:"high,omitempty"`
	Low          float64   `protobuf:"fixed64,4,opt,name=low,proto3" json:"low,omitempty"`
	Close        float64   `protobuf:"fixed64,5,opt,name=close,proto3" json:"close,omitempty"`
	Chg          float64   `protobuf:"fixed64,6,opt,name=chg,proto3" json:"chg,omitempty"`
	Change       float64   `protobuf:"fixed64,7,opt,name=change,proto3" json:"change,omitempty"`
	Volume       float64   `protobuf:"fixed64,8,opt,name=volume,proto3" json:"volume,omitempty"`
	Turnover     float64   `protobuf:"fixed64,9,opt,name=turnover,proto3" json:"turnover,omitempty"`
	LastDayClose float64   `protobuf:"fixed64,10,opt,name=lastDayClose,proto3" json:"lastDayClose,omitempty"`
	UsdRate      float64   `protobuf:"fixed64,11,opt,name=usdRate,proto3" json:"usdRate,omitempty"`
	BaseUsdRate  float64   `protobuf:"fixed64,12,opt,name=baseUsdRate,proto3" json:"baseUsdRate,omitempty"`
	Zone         float64   `protobuf:"fixed64,13,opt,name=zone,proto3" json:"zone,omitempty"`
	Datatime     int64     `protobuf:"varint,14,opt,name=datatime,proto3" json:"datatime,omitempty"`
	Trend        []float64 `protobuf:"fixed64,15,rep,packed,name=trend,proto3" json:"trend,omitempty"`
}

func (x *CoinThumb) Reset() {
	*x = CoinThumb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinThumb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinThumb) ProtoMessage() {}

func (x *CoinThumb) ProtoReflect() protoreflect.Message {
	mi := &file_market_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinThumb.ProtoReflect.Descriptor instead.
func (*CoinThumb) Descriptor() ([]byte, []int) {
	return file_market_proto_rawDescGZIP(), []int{2}
}

func (x *CoinThumb) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CoinThumb) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *CoinThumb) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *CoinThumb) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *CoinThumb) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *CoinThumb) GetChg() float64 {
	if x != nil {
		return x.Chg
	}
	return 0
}

func (x *CoinThumb) GetChange() float64 {
	if x != nil {
		return x.Change
	}
	return 0
}

func (x *CoinThumb) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *CoinThumb) GetTurnover() float64 {
	if x != nil {
		return x.Turnover
	}
	return 0
}

func (x *CoinThumb) GetLastDayClose() float64 {
	if x != nil {
		return x.LastDayClose
	}
	return 0
}

func (x *CoinThumb) GetUsdRate() float64 {
	if x != nil {
		return x.UsdRate
	}
	return 0
}

func (x *CoinThumb) GetBaseUsdRate() float64 {
	if x != nil {
		return x.BaseUsdRate
	}
	return 0
}

func (x *CoinThumb) GetZone() float64 {
	if x != nil {
		return x.Zone
	}
	return 0
}

func (x *CoinThumb) GetDatatime() int64 {
	if x != nil {
		return x.Datatime
	}
	return 0
}

func (x *CoinThumb) GetTrend() []float64 {
	if x != nil {
		return x.Trend
	}
	return nil
}

var File_market_proto protoreflect.FileDescriptor

var file_market_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x33, 0x0a, 0x09, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x37, 0x0a, 0x0e, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xf7, 0x02, 0x0a, 0x09, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x68,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x63, 0x68, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x44, 0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x73, 0x64, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x75,
	0x73, 0x64, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73,
	0x64, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x62, 0x61, 0x73,
	0x65, 0x55, 0x73, 0x64, 0x52, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x65, 0x6e,
	0x64, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x32, 0x4b,
	0x0a, 0x06, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x41, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x54, 0x72, 0x65, 0x6e, 0x64,
	0x12, 0x11, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x52, 0x65, 0x73, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_market_proto_rawDescOnce sync.Once
	file_market_proto_rawDescData = file_market_proto_rawDesc
)

func file_market_proto_rawDescGZIP() []byte {
	file_market_proto_rawDescOnce.Do(func() {
		file_market_proto_rawDescData = protoimpl.X.CompressGZIP(file_market_proto_rawDescData)
	})
	return file_market_proto_rawDescData
}

var file_market_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_market_proto_goTypes = []interface{}{
	(*MarketReq)(nil),      // 0: market.MarketReq
	(*SymbolThumbRes)(nil), // 1: market.SymbolThumbRes
	(*CoinThumb)(nil),      // 2: market.CoinThumb
}
var file_market_proto_depIdxs = []int32{
	2, // 0: market.SymbolThumbRes.list:type_name -> market.CoinThumb
	0, // 1: market.Market.FindSymbolThumbTrend:input_type -> market.MarketReq
	1, // 2: market.Market.FindSymbolThumbTrend:output_type -> market.SymbolThumbRes
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_market_proto_init() }
func file_market_proto_init() {
	if File_market_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_market_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolThumbRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinThumb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_market_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_market_proto_goTypes,
		DependencyIndexes: file_market_proto_depIdxs,
		MessageInfos:      file_market_proto_msgTypes,
	}.Build()
	File_market_proto = out.File
	file_market_proto_rawDesc = nil
	file_market_proto_goTypes = nil
	file_market_proto_depIdxs = nil
}
