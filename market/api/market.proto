syntax = "proto3";

package market;

// protoc-gen-go 版本大于1.4.0, proto文件需要加上go_package,否则无法生成
option go_package = "./market";

message MarketReq {
  string ip = 1;
  string symbol = 2;
  string unit = 3;
  int64 from = 4;
  int64 to = 5;
  string resolution = 6;
}
message SymbolThumbRes{
  repeated CoinThumb list = 1;
}
message CoinThumb {
  string symbol = 1;
  double open = 2;
  double high= 3;
  double low = 4;
  double close = 5;
  double chg = 6;
  double change = 7;
  double volume = 8;
  double turnover = 9;
  double lastDayClose = 10;
  double usdRate = 11;
  double baseUsdRate = 12;
  double zone = 13;
  int64 dateTime = 14;
  repeated double trend = 15;
}

message ExchangeCoin {
  int64 id = 1;
  string symbol = 2;
  int64 baseCoinScale = 3;
  string baseSymbol = 4;
  int64 coinScale = 5;
  int64 enable = 6;
  double fee = 7;
  int64 sort = 8;
  int64 EnableMarketBuy = 9;
  int64 EnableMarketSell = 10;
  double MinSellPrice = 11;
  int64 Flag = 12;
  int64 MaxTradingOrder = 13;
  int64 MaxTradingTime = 14;
  int64 MinTurnover = 15;
  int64 ClearTime = 16;
  int64 EndTime = 17;
  int64 Exchangeable = 18;
  double MaxBuyPrice = 19;
  double MaxVolume = 20;
  double MinVolume = 21;
  double PublishAmount = 22;
  double PublishPrice = 23;
  int64 PublishType = 24;
  int64 RobotType = 25;
  int64 StartTime = 26;
  int64 Visible = 27;
  int64 Zone = 28;
  string coinSymbol = 29;
}


message Coin{
  int32 id  = 1;
  string name  = 2;
  int32 canAutoWithdraw  = 3;
  int32 canRecharge  = 4;
  int32 canTransfer  = 5;
  int32 canWithdraw  = 6;
  double cnyRate  = 7;
  int32 enableRpc  = 8;
  int32 isPlatformCoin  = 9;
  double maxTxFee  = 10;
  double maxWithdrawAmount  = 11;
  double minTxFee  = 12;
  double minWithdrawAmount  = 13;
  string nameCn  = 14;
  int32 sort  = 15;
  int32 status  = 16;
  string unit  = 17;
  double usdRate  = 18;
  double withdrawThreshold  = 19;
  int32 hasLegal  = 20;
  string coldWalletAddress  = 21;
  double minerFee  = 22;
  int32 withdrawScale  = 23;
  int32 accountType  = 24;
  string depositAddress  = 25;
  string infolink  = 26;
  string information  = 27;
  double minRechargeAmount  = 28;
}
message History {
  int64 time = 1;
  double open = 2;
  double close = 3;
  double high = 4;
  double low = 5;
  double volume = 6;
}
message HistoryRes {
  repeated History list = 1;
}

message ExchangeCoinRes {
  repeated ExchangeCoin list = 1;
}

message CoinList {
  repeated Coin list = 1;
  int64 total = 2;
}
service Market {
  rpc FindSymbolThumbTrend(MarketReq) returns(SymbolThumbRes);
  rpc FindSymbolInfo(MarketReq) returns(ExchangeCoin);
  rpc FindCoinInfo(MarketReq) returns(Coin);
  rpc FindAllCoin(MarketReq) returns(CoinList);
  rpc HistoryKline(MarketReq) returns(HistoryRes);
  rpc FindExchangeCoinVisible(MarketReq) returns(ExchangeCoinRes);
  rpc FindCoinById(MarketReq) returns(Coin);
}